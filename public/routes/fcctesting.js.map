{"version":3,"sources":["../../src/routes/fcctesting.ts"],"names":["runner","TestEmitter","app","route","get","req","res","next","console","log","fs","readFile","__dirname","err","data","send","toString","type","error","process","env","NODE_ENV","json","status","report","testFilter","query","n","on","nextTick","hs","header","filter","h","match","hObj","headers","tests","out","t","context","title","undefined"],"mappings":"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","sourcesContent":["/*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*       DO NOT EDIT THIS FILE\r\n*       For FCC testing purposes!\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*/\r\n\r\n'use strict';\r\n\r\nimport cors from 'cors';\r\nimport fs from 'fs';\r\n// import runner from '../../test-runner';\r\nimport TestEmitter from '../testing/test-runner2';\r\nimport express from 'express';\r\nimport { Runner } from 'mocha';\r\nimport { keys } from '../helper/keys';\r\nconst runner = new TestEmitter();\r\n\r\nexport default function (app: express.Application) {\r\n\r\n  app.route('/_api/server.js')\r\n    .get(function (req: express.Request, res: express.Response, next: Function) {\r\n      console.log('requested');\r\n      fs.readFile(__dirname + '/public/index.js', function (err, data) {\r\n        if (err) return next(err);\r\n        res.send(data.toString());\r\n      });\r\n    });\r\n  app.route('/_api/routes/api.js')\r\n    .get(function (req: express.Request, res: express.Response, next: Function) {\r\n      console.log('requested');\r\n      fs.readFile(__dirname + '/routes/api.js', function (err, data) {\r\n        if (err) return next(err);\r\n        res.type('txt').send(data.toString());\r\n      });\r\n    });\r\n  app.route('/_api/controllers/convertHandler.js')\r\n    .get(function (req: express.Request, res: express.Response, next: Function) {\r\n      console.log('requested');\r\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\r\n        if (err) return next(err);\r\n        res.type('txt').send(data.toString());\r\n      });\r\n    });\r\n\r\n  var error: Error;\r\n  app.get('/_api/get-tests', cors(), function (req: express.Request, res: express.Response, next) {\r\n    console.log(error);\r\n    if (!error && process.env.NODE_ENV === 'test') return next();\r\n    res.json({ status: 'unavailable' });\r\n  },\r\n    function (req: express.Request, res: express.Response, next: Function) {\r\n      if (!runner.report) return next();\r\n      res.json(testFilter(runner.report, req.query.type, req.query.n));\r\n    },\r\n    function (req: express.Request, res: express.Response) {\r\n      runner.on('done', function (report) {\r\n        process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\r\n      });\r\n    });\r\n  app.get('/_api/app-info', function (req: express.Request, res: express.Response) {\r\n    var hs = keys(res.header)\r\n      .filter((h: string) => !h.match(/^access-control-\\w+/));\r\n    var hObj: object = {};\r\n\r\n    // broken\r\n    // hs.forEach((h: any) => { hObj[h] = res.header[h] });\r\n    // delete res.header['strict-transport-security'];\r\n\r\n    // new w/ TS\r\n    for(const h of hs) {\r\n      hObj[h] = res.header[h]\r\n    };\r\n    // delete res.header['strict-transport-security'];\r\n\r\n    res.json({ headers: hObj });\r\n  });\r\n\r\n};\r\n\r\n// lazy type settings\r\nfunction testFilter(tests: any, type: any, n: any) {\r\n  var out;\r\n  switch (type) {\r\n    case 'unit':\r\n      out = tests.filter((t: any) => t.context.match('Unit Tests'));\r\n      break;\r\n    case 'functional':\r\n      out = tests.filter((t: any) => t.context.match('Functional Tests') && !t.title.match('#example'));\r\n      break;\r\n    default:\r\n      out = tests;\r\n  }\r\n  if (n !== undefined) {\r\n    return out[n] || out;\r\n  }\r\n  return out;\r\n}"],"file":"fcctesting.js"}