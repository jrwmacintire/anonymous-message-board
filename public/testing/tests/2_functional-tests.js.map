{"version":3,"sources":["../../../src/testing/tests/2_functional-tests.ts"],"names":["assert","chai","expect","use","chaiHttp","suite","test","done","request","server","post","send","text","delete_password","end","err","res","console","log","status","equal","isArray","body","isAbove","length","get","firstThread","secondThread","thirdThread","isObject","doesNotHaveAnyKeys","isTrue","message","isString","board","thread_id","put","isEmpty","query","firstReply","secondReply","thirdReply","reply_id","thread","reported"],"mappings":"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","sourcesContent":["/*\r\n *\r\n *\r\n *       FILL IN EACH FUNCTIONAL TEST BELOW COMPLETELY\r\n *       -----[Keep the tests in the same order!]-----\r\n *       (if additional are added, keep them at the very end!)\r\n */\r\n\r\nimport chaiHttp from 'chai-http';\r\nimport chai from 'chai';\r\nconst { assert, expect } = chai;\r\nimport server from \"../../index\";\r\n\r\nchai.use(chaiHttp);\r\n\r\nsuite(\"Functional Tests\", function () {\r\n  suite(\"API ROUTING FOR /api/threads/:board\", function () {\r\n    suite(\"POST\", function () {\r\n\r\n      test(\"Every field filled in\", function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            console.log(`status:`, res.status);\r\n            assert.equal(res.status, 200);\r\n            assert.isArray(res.body);\r\n            assert.isAbove(res.body.length, 0)\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t2\")\r\n          .send({\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for board name. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'board' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/\")\r\n          .send({\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 404);\r\n            assert.equal(\r\n              text,\r\n              `Not found. If you\\'re attempting to access a board, please try something like \\'/api/threads/{a-z}\\'.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'text' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            text: \"\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'delete_password' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            text: \"test text for board\",\r\n            delete_password: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Invalid input for delete_password field. Please try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing all fields in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Please ensure all input fields are filled out and try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"GET\", function () {\r\n      test(`Get current board's threads as an array of objects.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/t\")\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            const firstThread = body[0],\r\n              secondThread = body[1],\r\n              thirdThread = body[2];\r\n            assert.equal(res.status, 200);\r\n            assert.isArray(body);\r\n            assert.isObject(firstThread);\r\n            assert.doesNotHaveAnyKeys(body, [\"reported\", \"delete_password\"]);\r\n            assert.isTrue(body.length > 0);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, can't find a board with that name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/t2\")\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              body.message,\r\n              \"A board with that name could not be found. Please enter a different board name.\"\r\n            );\r\n            assert.isString(body.board);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, empty input for board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/\")\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 404);\r\n            assert.equal(body.message, `Invalid/empty input for 'board' name.`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"DELETE\", function () {\r\n      test(`Delete thread with 'delete_password' and 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(\r\n              text,\r\n              `Success deleting thread!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to find and delete thread due to invalid board name!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid thread ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: \"1234zxz89\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid ID!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid 'delete_password'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"pas214rd1234\",\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'delete_password'!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"PUT\", function () {\r\n      test(`Fail to report thread with invalid thread ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"1234lkjlkj\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'thread_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Fail to report thread with invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid board name`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Report thread given valid ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(text, \"Successfully reported thread!\");\r\n            done();\r\n          });\r\n      });\r\n    });\r\n  });\r\n\r\n  suite(\"API ROUTING FOR /api/replies/:board\", function () {\r\n    suite(\"POST\", function () {\r\n      test(\"Every field filled in\", function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'board' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for board name. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'text' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'thread_id' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'delete_password' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Invalid input for delete_password field. Please try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing all fields in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { text, body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Please ensure all input fields are filled out and try again.\"\r\n            );\r\n            assert.isEmpty(body);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"GET\", function () {\r\n      test(`Get current thread's replies as an array of objects.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            const firstReply = body[0],\r\n              secondReply = body[1],\r\n              thirdReply = body[2];\r\n            assert.equal(res.status, 200);\r\n            assert.isArray(body);\r\n            assert.isObject(firstReply);\r\n            assert.doesNotHaveAnyKeys(body, [\"reported\", \"delete_password\"]);\r\n            assert.isTrue(body.length > 0);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, can't find a thread with that name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"A thread with that name could not be found. Please enter a different thread name.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, empty input for 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(text, `Invalid/empty input for 'board' name.`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"PUT\", function () {\r\n      test(`Failed to report thread with invalid 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"1234lkjlkj\",\r\n            reply_id: \"987654321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'thread_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Failed to report thread with invalid 'reply_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\",\r\n            reply_id: \"98dsff4321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'reply_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Fail to report reply with invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\",\r\n            reply_id: \"987654321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid board name`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Report thread given valid ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(body.message, \"Successfully reported thread!\");\r\n            assert.isTrue(body.thread.reported);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"DELETE\", function () {\r\n      test(`Delete reply from thread with 'delete_password', 'reply_id' and 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: \"987654321\",\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(body.message, `Success deleting reply from thread!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'delete_password' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid password - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'board' name in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t2\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: '987654321',\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'board' name - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'thread_id' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: '987654321',\r\n            thread_id: \"123sdfsf6789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'thread_id' - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'reply_id' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'reply_id' - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"file":"2_functional-tests.js"}