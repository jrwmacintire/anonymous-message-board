{"version":3,"sources":["../../../src/testing/tests/2_functional-tests.ts"],"names":["assert","chai","expect","threadController","ThreadController","use","chaiHttp","suite","test","done","request","server","post","send","thread_text","delete_password","end","err","res","console","log","status","body","firstDoc","secondDoc","thirdDoc","isArray","isAbove","length","isAtMost","equal","text","isUndefined","reported","Date","parse","created_on","get","firstThread","secondThread","thirdThread","isObject","doesNotHaveAnyKeys","isBelow","isString","threadID","beforeAll","getThreadForDeleteTest","then","thread","_id","thread_id","put","board","isEmpty","query","firstReply","secondReply","thirdReply","isTrue","reply_id","message"],"mappings":";;;;;;AAQA;;AACA;;AAEA;;AAEA;;AAbA;;;;;;;IAUQA,M,GAAmBC,gB,CAAnBD,M;IAAQE,M,GAAWD,gB,CAAXC,M;AAMhB,IAAMC,gBAAgB,GAAG,IAAIC,4BAAJ,EAAzB;;AAEAH,iBAAKI,GAAL,CAASC,oBAAT;;AAEAC,KAAK,CAAC,kBAAD,EAAqB,YAAY;AACpCA,EAAAA,KAAK,CAAC,qCAAD,EAAwC,YAAY;AACvDA,IAAAA,KAAK,CAAC,MAAD,EAAS,YAAY;AAExBC,MAAAA,IAAI,CAAC,uBAAD,EAA0B,UAAUC,IAAV,EAAgB;AAC5CR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQ;AACJC,UAAAA,WAAW,EAAE,qBADT;AAEJC,UAAAA,eAAe,EAAE;AAFb,SAHR,EAOGC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvBC,UAAAA,OAAO,CAACC,GAAR,YAAuBF,GAAG,CAACG,MAA3B;AADuB,cAEfC,IAFe,GAENJ,GAFM,CAEfI,IAFe;AAGvB,cAAMC,QAAQ,GAAID,IAAI,CAAC,CAAD,CAAtB;AAAA,cACME,SAAS,GAAGF,IAAI,CAAC,CAAD,CADtB;AAAA,cAEMG,QAAQ,GAAIH,IAAI,CAAC,CAAD,CAFtB;AAGAtB,UAAAA,MAAM,CAAC0B,OAAP,CAAeJ,IAAf;AACAtB,UAAAA,MAAM,CAAC2B,OAAP,CAAeL,IAAI,CAACM,MAApB,EAA4B,CAA5B;AACA5B,UAAAA,MAAM,CAAC6B,QAAP,CAAgBP,IAAI,CAACM,MAArB,EAA6B,EAA7B;AACA5B,UAAAA,MAAM,CAAC8B,KAAP,CAAaP,QAAQ,CAACQ,IAAtB,EAA4B,qBAA5B;AACA/B,UAAAA,MAAM,CAACgC,WAAP,CAAmBT,QAAQ,CAACR,eAA5B;AACAf,UAAAA,MAAM,CAACgC,WAAP,CAAmBT,QAAQ,CAACU,QAA5B;AACAjC,UAAAA,MAAM,CAACgC,WAAP,CAAmBR,SAAS,CAACT,eAA7B;AACAf,UAAAA,MAAM,CAACgC,WAAP,CAAmBR,SAAS,CAACS,QAA7B;AACAjC,UAAAA,MAAM,CAACgC,WAAP,CAAmBP,QAAQ,CAACV,eAA5B;AACAf,UAAAA,MAAM,CAACgC,WAAP,CAAmBP,QAAQ,CAACQ,QAA5B;AACAjC,UAAAA,MAAM,CAAC2B,OAAP,CAAeO,IAAI,CAACC,KAAL,CAAWZ,QAAQ,CAACa,UAApB,CAAf,EAAgDF,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACY,UAArB,CAAhD;AACApC,UAAAA,MAAM,CAAC2B,OAAP,CAAeO,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACY,UAArB,CAAf,EAAiDF,IAAI,CAACC,KAAL,CAAWV,QAAQ,CAACW,UAApB,CAAjD;AACA3B,UAAAA,IAAI;AACL,SA1BH;AA2BD,OA5BG,CAAJ;AA8BAD,MAAAA,IAAI,wBAAwB,UAAUC,IAAV,EAAgB;AAC1CR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,iBAFR,EAGGC,IAHH,CAGQ;AACJC,UAAAA,WAAW,EAAE,qBADT;AAEJC,UAAAA,eAAe,EAAE;AAFb,SAHR,EAOGC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,oCAAoC,UAAUC,IAAV,EAAgB;AACtDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,eAFR,EAGGC,IAHH,CAGQ;AACJC,UAAAA,WAAW,EAAE,qBADT;AAEJC,UAAAA,eAAe,EAAE;AAFb,SAHR,EAOGC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,mCAAmC,UAAUC,IAAV,EAAgB;AACrDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQ;AACJC,UAAAA,WAAW,EAAE,EADT;AAEJC,UAAAA,eAAe,EAAE;AAFb,SAHR,EAOGC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,8CAA8C,UAAUC,IAAV,EAAgB;AAChER,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQ;AACJC,UAAAA,WAAW,EAAE,qBADT;AAEJC,UAAAA,eAAe,EAAE;AAFb,SAHR,EAOGC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,4DAFF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,iCAAiC,UAAUC,IAAV,EAAgB;AACnDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQ,EAHR,EAIGG,GAJH,CAIO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,8DAFF;AAIAtB,UAAAA,IAAI;AACL,SAZH;AAaD,OAdG,CAAJ;AAeD,KA3HI,CAAL;AA6HAF,IAAAA,KAAK,CAAC,KAAD,EAAQ,YAAY;AACvBC,MAAAA,IAAI,wDAAwD,UAAUC,IAAV,EAAgB;AAC1ER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,gBAFP,EAGGrB,GAHH,CAGO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvB,cAAMgB,WAAW,GAAGhB,IAAI,CAAC,CAAD,CAAxB;AAAA,cACEiB,YAAY,GAAGjB,IAAI,CAAC,CAAD,CADrB;AAAA,cAEEkB,WAAW,GAAGlB,IAAI,CAAC,CAAD,CAFpB;AAGAtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC0B,OAAP,CAAeJ,IAAf;AACAtB,UAAAA,MAAM,CAACyC,QAAP,CAAgBH,WAAhB;AACAtC,UAAAA,MAAM,CAAC0C,kBAAP,CAA0BpB,IAA1B,EAAgC,CAAC,UAAD,EAAa,iBAAb,CAAhC;AACAtB,UAAAA,MAAM,CAAC2C,OAAP,CAAerB,IAAI,CAACM,MAApB,EAA4B,EAA5B;AACA5B,UAAAA,MAAM,CAAC2B,OAAP,CAAeL,IAAI,CAACM,MAApB,EAA4B,CAA5B;AACAnB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,sDAAsD,UAAUC,IAAV,EAAgB;AACxER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,iBAFP,EAGGrB,GAHH,CAGO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,iFAFF;AAIA/B,UAAAA,MAAM,CAAC4C,QAAP,CAAgBb,IAAhB;AACAtB,UAAAA,IAAI;AACL,SAZH;AAaD,OAdG,CAAJ;AAgBAD,MAAAA,IAAI,+CAA+C,UAAUC,IAAV,EAAgB;AACjER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,eAFP,EAGGrB,GAHH,CAGO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaC,IAAb;AACAtB,UAAAA,IAAI;AACL,SARH;AASD,OAVG,CAAJ;AAWD,KA/CI,CAAL;AAiDAF,IAAAA,KAAK,CAAC,QAAD,EAAW,YAAY;AAE1B,UAAIsC,QAAJ;AAEA,WAAKC,SAAL,CAAe,iBAAerC,IAAf;AAAA;AAAA;AAAA;AAAA;AACbN,gBAAAA,gBAAgB,CAAC4C,sBAAjB,GACGC,IADH,CACQ,UAAAC,MAAM,EAAI;AACdJ,kBAAAA,QAAQ,GAAGI,MAAM,CAAEC,GAAnB;AACD,iBAHH,WAISzC,IAJT;AAKAA,gBAAAA,IAAI;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;AASAD,MAAAA,IAAI,0DAA0D,UAAUC,IAAV,EAAgB;AAC5ER,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJoC,UAAAA,SAAS,EAAEN;AAFP,SAHR,EAOG7B,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,6CAA6C,UAAUC,IAAV,EAAgB;AAC/DR,yBACGS,OADH,CACWC,iBADX,YAEU,iBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJoC,UAAAA,SAAS,EAAEN;AAFP,SAHR,EAOG7B,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,4CAA4C,UAAUC,IAAV,EAAgB;AAC9DR,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJoC,UAAAA,SAAS,EAAE;AAFP,SAHR,EAOGnC,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,oDAAoD,UAAUC,IAAV,EAAgB;AACtER,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJoC,UAAAA,SAAS,EAAEN;AAFP,SAHR,EAOG7B,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAkBD,KAxFI,CAAL;AA0FAF,IAAAA,KAAK,CAAC,KAAD,EAAQ,YAAY;AACvBC,MAAAA,IAAI,kDAAkD,UAAUC,IAAV,EAAgB;AACpER,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE;AADP,SAHR,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAdH;AAeD,OAhBG,CAAJ;AAkBAD,MAAAA,IAAI,mDAAmD,UAAUC,IAAV,EAAgB;AACrER,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE;AADP,SAHR,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAdH;AAeD,OAhBG,CAAJ;AAkBAD,MAAAA,IAAI,kCAAkC,UAAUC,IAAV,EAAgB;AACpDR,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE;AADP,SAHR,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaC,IAAb,EAAmB,+BAAnB;AACAtB,UAAAA,IAAI;AACL,SAXH;AAYD,OAbG,CAAJ;AAcD,KAnDI,CAAL;AAoDD,GA7TI,CAAL;AA+TAF,EAAAA,KAAK,CAAC,qCAAD,EAAwC,YAAY;AACvDA,IAAAA,KAAK,CAAC,MAAD,EAAS,YAAY;AACxBC,MAAAA,IAAI,CAAC,uBAAD,EAA0B,UAAUC,IAAV,EAAgB;AAC5CR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ;AACJwC,UAAAA,KAAK,EAAE,YADH;AAEJF,UAAAA,SAAS,EAAE,WAFP;AAGJpB,UAAAA,IAAI,EAAE,qBAHF;AAIJhB,UAAAA,eAAe,EAAE;AAJb,SAHR,EASGC,GATH,CASO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACAZ,UAAAA,IAAI;AACL,SAbH;AAcD,OAfG,CAAJ;AAiBAD,MAAAA,IAAI,oCAAoC,UAAUC,IAAV,EAAgB;AACtDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ;AACJwC,UAAAA,KAAK,EAAE,EADH;AAEJF,UAAAA,SAAS,EAAE,WAFP;AAGJpB,UAAAA,IAAI,EAAE,qBAHF;AAIJhB,UAAAA,eAAe,EAAE;AAJb,SAHR,EASGC,GATH,CASO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAjBH;AAkBD,OAnBG,CAAJ;AAqBAD,MAAAA,IAAI,mCAAmC,UAAUC,IAAV,EAAgB;AACrDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ;AACJwC,UAAAA,KAAK,EAAE,YADH;AAEJF,UAAAA,SAAS,EAAE,WAFP;AAGJpB,UAAAA,IAAI,EAAE,EAHF;AAIJhB,UAAAA,eAAe,EAAE;AAJb,SAHR,EASGC,GATH,CASO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAjBH;AAkBD,OAnBG,CAAJ;AAqBAD,MAAAA,IAAI,wCAAwC,UAAUC,IAAV,EAAgB;AAC1DR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ;AACJwC,UAAAA,KAAK,EAAE,YADH;AAEJF,UAAAA,SAAS,EAAE,EAFP;AAGJpB,UAAAA,IAAI,EAAE,qBAHF;AAIJhB,UAAAA,eAAe,EAAE;AAJb,SAHR,EASGC,GATH,CASO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAjBH;AAkBD,OAnBG,CAAJ;AAqBAD,MAAAA,IAAI,8CAA8C,UAAUC,IAAV,EAAgB;AAChER,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ;AACJwC,UAAAA,KAAK,EAAE,YADH;AAEJF,UAAAA,SAAS,EAAE,WAFP;AAGJpB,UAAAA,IAAI,EAAE,qBAHF;AAIJhB,UAAAA,eAAe,EAAE;AAJb,SAHR,EASGC,GATH,CASO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,4DAFF;AAIAtB,UAAAA,IAAI;AACL,SAjBH;AAkBD,OAnBG,CAAJ;AAqBAD,MAAAA,IAAI,iCAAiC,UAAUC,IAAV,EAAgB;AACnDR,yBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,mBAFR,EAGGC,IAHH,CAGQ,EAHR,EAIGG,GAJH,CAIO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACAb,GADA,CACfa,IADe;AAAA,cACTT,IADS,GACAJ,GADA,CACTI,IADS;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,8DAFF;AAIA/B,UAAAA,MAAM,CAACsD,OAAP,CAAehC,IAAf;AACAb,UAAAA,IAAI;AACL,SAbH;AAcD,OAfG,CAAJ;AAgBD,KAtHI,CAAL;AAwHAF,IAAAA,KAAK,CAAC,KAAD,EAAQ,YAAY;AACvBC,MAAAA,IAAI,yDAAyD,UAAUC,IAAV,EAAgB;AAC3ER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,gBAFP,EAGGkB,KAHH,CAGS;AACLJ,UAAAA,SAAS,EAAE;AADN,SAHT,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvB,cAAMkC,UAAU,GAAGlC,IAAI,CAAC,CAAD,CAAvB;AAAA,cACEmC,WAAW,GAAGnC,IAAI,CAAC,CAAD,CADpB;AAAA,cAEEoC,UAAU,GAAGpC,IAAI,CAAC,CAAD,CAFnB;AAGAtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC0B,OAAP,CAAeJ,IAAf;AACAtB,UAAAA,MAAM,CAACyC,QAAP,CAAgBe,UAAhB;AACAxD,UAAAA,MAAM,CAAC0C,kBAAP,CAA0BpB,IAA1B,EAAgC,CAAC,UAAD,EAAa,iBAAb,CAAhC;AACAtB,UAAAA,MAAM,CAAC2D,MAAP,CAAcrC,IAAI,CAACM,MAAL,GAAc,CAA5B;AACAnB,UAAAA,IAAI;AACL,SAjBH;AAkBD,OAnBG,CAAJ;AAqBAD,MAAAA,IAAI,uDAAuD,UAAUC,IAAV,EAAgB;AACzER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,gBAFP,EAGGkB,KAHH,CAGS;AACLJ,UAAAA,SAAS,EAAE;AADN,SAHT,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF,EAEE,mFAFF;AAIAtB,UAAAA,IAAI;AACL,SAdH;AAeD,OAhBG,CAAJ;AAkBAD,MAAAA,IAAI,gDAAgD,UAAUC,IAAV,EAAgB;AAClER,yBACGS,OADH,CACWC,iBADX,EAEG0B,GAFH,CAEO,gBAFP,EAGGkB,KAHH,CAGS;AACLJ,UAAAA,SAAS,EAAE;AADN,SAHT,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaC,IAAb;AACAtB,UAAAA,IAAI;AACL,SAXH;AAYD,OAbG,CAAJ;AAcD,KAtDI,CAAL;AAwDAF,IAAAA,KAAK,CAAC,KAAD,EAAQ,YAAY;AACvBC,MAAAA,IAAI,sDAAsD,UAAUC,IAAV,EAAgB;AACxER,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE,YADP;AAEJS,UAAAA,QAAQ,EAAE;AAFN,SAHR,EAOG5C,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,qDAAqD,UAAUC,IAAV,EAAgB;AACvER,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE,WADP;AAEJS,UAAAA,QAAQ,EAAE;AAFN,SAHR,EAOG5C,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,kDAAkD,UAAUC,IAAV,EAAgB;AACpER,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE,WADP;AAEJS,UAAAA,QAAQ,EAAE;AAFN,SAHR,EAOG5C,GAPH,CAOO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfa,IADe,GACNb,GADM,CACfa,IADe;AAEvB/B,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CACEC,IADF;AAIAtB,UAAAA,IAAI;AACL,SAfH;AAgBD,OAjBG,CAAJ;AAmBAD,MAAAA,IAAI,kCAAkC,UAAUC,IAAV,EAAgB;AACpDR,yBACGS,OADH,CACWC,iBADX,EAEGyC,GAFH,CAEO,gBAFP,EAGGvC,IAHH,CAGQ;AACJsC,UAAAA,SAAS,EAAE;AADP,SAHR,EAMGnC,GANH,CAMO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB,EAA2B,+BAA3B;AACA7D,UAAAA,MAAM,CAAC2D,MAAP,CAAcrC,IAAI,CAAC2B,MAAL,CAAYhB,QAA1B;AACAxB,UAAAA,IAAI;AACL,SAZH;AAaD,OAdG,CAAJ;AAeD,KAzEI,CAAL;AA2EAF,IAAAA,KAAK,CAAC,QAAD,EAAW,YAAY;AAC1BC,MAAAA,IAAI,iFAAiF,UAAUC,IAAV,EAAgB;AACnGR,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJ6C,UAAAA,QAAQ,EAAE,WAFN;AAGJT,UAAAA,SAAS,EAAE;AAHP,SAHR,EAQGnC,GARH,CAQO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB;AACApD,UAAAA,IAAI;AACL,SAbH;AAcD,OAfG,CAAJ;AAiBAD,MAAAA,IAAI,iDAAiD,UAAUC,IAAV,EAAgB;AACnER,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ,EAHR,EAIGG,GAJH,CAIO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB;AACApD,UAAAA,IAAI;AACL,SATH;AAUD,OAXG,CAAJ;AAaAD,MAAAA,IAAI,4CAA4C,UAAUC,IAAV,EAAgB;AAC9DR,yBACGS,OADH,CACWC,iBADX,YAEU,iBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJ6C,UAAAA,QAAQ,EAAE,WAFN;AAGJT,UAAAA,SAAS,EAAE;AAHP,SAHR,EAQGnC,GARH,CAQO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB;AACApD,UAAAA,IAAI;AACL,SAbH;AAcD,OAfG,CAAJ;AAiBAD,MAAAA,IAAI,2CAA2C,UAAUC,IAAV,EAAgB;AAC7DR,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ;AACJE,UAAAA,eAAe,EAAE,cADb;AAEJ6C,UAAAA,QAAQ,EAAE,WAFN;AAGJT,UAAAA,SAAS,EAAE;AAHP,SAHR,EAQGnC,GARH,CAQO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB;AACApD,UAAAA,IAAI;AACL,SAbH;AAcD,OAfG,CAAJ;AAiBAD,MAAAA,IAAI,0CAA0C,UAAUC,IAAV,EAAgB;AAC5DR,yBACGS,OADH,CACWC,iBADX,YAEU,gBAFV,EAGGE,IAHH,CAGQ,EAHR,EAIGG,GAJH,CAIO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAAA,cACfI,IADe,GACNJ,GADM,CACfI,IADe;AAEvBtB,UAAAA,MAAM,CAAC8B,KAAP,CAAaZ,GAAG,CAACG,MAAjB,EAAyB,GAAzB;AACArB,UAAAA,MAAM,CAAC8B,KAAP,CAAaR,IAAI,CAACuC,OAAlB;AACApD,UAAAA,IAAI;AACL,SATH;AAUD,OAXG,CAAJ;AAYD,KA7EI,CAAL;AA8ED,GA1UI,CAAL;AA2UD,CA3oBI,CAAL","sourcesContent":["/*\r\n *\r\n *\r\n *       FILL IN EACH FUNCTIONAL TEST BELOW COMPLETELY\r\n *       -----[Keep the tests in the same order!]-----\r\n *       (if additional are added, keep them at the very end!)\r\n */\r\n\r\nimport chaiHttp from 'chai-http';\r\nimport chai from 'chai';\r\nconst { assert, expect } = chai;\r\nimport server from \"../../index\";\r\n\r\nimport ThreadController from '../../controllers/threadController';\r\nimport { threadId } from 'worker_threads';\r\nimport { ObjectID } from 'bson';\r\nconst threadController = new ThreadController();\r\n\r\nchai.use(chaiHttp);\r\n\r\nsuite(\"Functional Tests\", function () {\r\n  suite(\"API ROUTING FOR /api/threads/:board\", function () {\r\n    suite(\"POST\", function () {\r\n\r\n      test(\"Every field filled in\", function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            thread_text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            console.log(`status:`, res.status);\r\n            const { body } = res;\r\n            const firstDoc  = body[0],\r\n                  secondDoc = body[1],\r\n                  thirdDoc  = body[2];\r\n            assert.isArray(body);\r\n            assert.isAbove(body.length, 0);\r\n            assert.isAtMost(body.length, 10);\r\n            assert.equal(firstDoc.text, \"test text for board\");            \r\n            assert.isUndefined(firstDoc.delete_password);\r\n            assert.isUndefined(firstDoc.reported);\r\n            assert.isUndefined(secondDoc.delete_password);\r\n            assert.isUndefined(secondDoc.reported);\r\n            assert.isUndefined(thirdDoc.delete_password);\r\n            assert.isUndefined(thirdDoc.reported);\r\n            assert.isAbove(Date.parse(firstDoc.created_on), Date.parse(secondDoc.created_on));\r\n            assert.isAbove(Date.parse(secondDoc.created_on), Date.parse(thirdDoc.created_on));\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t2\")\r\n          .send({\r\n            thread_text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for board name. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'board' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/\")\r\n          .send({\r\n            thread_text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 404);\r\n            assert.equal(\r\n              text,\r\n              `Not found. If you\\'re attempting to access a board, please try something like \\'/api/threads/{a-z}\\'.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'text' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            thread_text: \"\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'delete_password' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({\r\n            thread_text: \"test text for board\",\r\n            delete_password: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Invalid input for delete_password field. Please try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing all fields in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/threads/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Please ensure all input fields are filled out and try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"GET\", function () {\r\n      test(`Get current board's threads as an array of objects.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/t\")\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            const firstThread = body[0],\r\n              secondThread = body[1],\r\n              thirdThread = body[2];\r\n            assert.equal(res.status, 200);\r\n            assert.isArray(body);\r\n            assert.isObject(firstThread);\r\n            assert.doesNotHaveAnyKeys(body, [\"reported\", \"delete_password\"]);\r\n            assert.isBelow(body.length, 11);\r\n            assert.isAbove(body.length, 0);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, can't find a board with that name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/t2\")\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"A board with that name could not be found. Please enter a different board name.\"\r\n            );\r\n            assert.isString(text);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, empty input for board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/threads/\")\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 404);\r\n            assert.equal(text, `Not found. If you're attempting to access a board, please try something like '/api/threads/{a-z}'.`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"DELETE\", function () {\r\n\r\n      let threadID: ObjectID;\r\n\r\n      this.beforeAll(async function(done) {\r\n        threadController.getThreadForDeleteTest()\r\n          .then(thread => {\r\n            threadID = thread!._id;\r\n          })\r\n          .catch(done);\r\n        done();\r\n      });\r\n\r\n      test(`Delete thread with 'delete_password' and 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: threadID\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(\r\n              text,\r\n              `Success deleting thread!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t2\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: threadID\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to find and delete thread due to invalid board name!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid thread ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            thread_id: \"1234zxz89\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid ID!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Delete failed due to invalid 'delete_password'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/threads/t\")\r\n          .send({\r\n            delete_password: \"pas214rd1234\",\r\n            thread_id: threadID\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'delete_password'!`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"PUT\", function () {\r\n      test(`Fail to report thread with invalid thread ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"1234lkjlkj\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'thread_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Fail to report thread with invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid board name`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Report thread given valid ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/threads/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(text, \"Successfully reported thread!\");\r\n            done();\r\n          });\r\n      });\r\n    });\r\n  });\r\n\r\n  suite(\"API ROUTING FOR /api/replies/:board\", function () {\r\n    suite(\"POST\", function () {\r\n      test(\"Every field filled in\", function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'board' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for board name. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'text' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'thread_id' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"\",\r\n            text: \"test text for board\",\r\n            delete_password: \"password1234\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Invalid input for text. Please try again.`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing 'delete_password' field in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({\r\n            board: \"test_board\",\r\n            thread_id: \"123456789\",\r\n            text: \"test text for board\",\r\n            delete_password: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Invalid input for delete_password field. Please try again.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Missing all fields in input.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .post(\"/api/replies/test\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { text, body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"Please ensure all input fields are filled out and try again.\"\r\n            );\r\n            assert.isEmpty(body);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"GET\", function () {\r\n      test(`Get current thread's replies as an array of objects.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            const firstReply = body[0],\r\n              secondReply = body[1],\r\n              thirdReply = body[2];\r\n            assert.equal(res.status, 200);\r\n            assert.isArray(body);\r\n            assert.isObject(firstReply);\r\n            assert.doesNotHaveAnyKeys(body, [\"reported\", \"delete_password\"]);\r\n            assert.isTrue(body.length > 0);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, can't find a thread with that name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              \"A thread with that name could not be found. Please enter a different thread name.\"\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid input, empty input for 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .get(\"/api/replies/t\")\r\n          .query({\r\n            thread_id: \"\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(text, `Invalid/empty input for 'board' name.`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"PUT\", function () {\r\n      test(`Failed to report thread with invalid 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"1234lkjlkj\",\r\n            reply_id: \"987654321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'thread_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Failed to report thread with invalid 'reply_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\",\r\n            reply_id: \"98dsff4321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid 'reply_id'`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Fail to report reply with invalid board name.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\",\r\n            reply_id: \"987654321\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { text } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(\r\n              text,\r\n              `Failed to delete thread due to invalid board name`\r\n            );\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Report thread given valid ID.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .put(\"/api/replies/t\")\r\n          .send({\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(body.message, \"Successfully reported thread!\");\r\n            assert.isTrue(body.thread.reported);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n\r\n    suite(\"DELETE\", function () {\r\n      test(`Delete reply from thread with 'delete_password', 'reply_id' and 'thread_id'.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: \"987654321\",\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 200);\r\n            assert.equal(body.message, `Success deleting reply from thread!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'delete_password' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid password - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'board' name in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t2\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: '987654321',\r\n            thread_id: \"123456789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'board' name - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'thread_id' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({\r\n            delete_password: \"password1234\",\r\n            reply_id: '987654321',\r\n            thread_id: \"123sdfsf6789\"\r\n          })\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'thread_id' - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n\r\n      test(`Invalid 'reply_id' in delete request.`, function (done) {\r\n        chai\r\n          .request(server)\r\n          .delete(\"/api/replies/t\")\r\n          .send({})\r\n          .end(function (err, res) {\r\n            const { body } = res;\r\n            assert.equal(res.status, 400);\r\n            assert.equal(body.message, `Invalid 'reply_id' - failed to delete reply!`);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"file":"2_functional-tests.js"}